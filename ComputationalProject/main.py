# melhor custo do Roberto: 168

# Importações necessárias
import numpy as np
import matplotlib.pyplot as plt
import genetic_algorithm, ant_colony_algorithm, utils

# Matriz de custos teste
cost_matrix = [[0, 10, 15, 20], [10, 0, 35, 25], [15, 35, 0, 30], [20, 25, 30, 0]]

"""
cost_matrix = [
    [0, 10, 15, 45, 5, 45, 50, 44, 30, 100, 67, 33, 90, 17, 50],
    [15, 0, 100, 30, 20, 25, 80, 45, 41, 5, 45, 10, 90, 10, 35],
    [40, 80, 0, 90, 70, 33, 100, 70, 30, 23, 80, 60, 47, 33, 25],
    [100, 8, 5, 0, 5, 50, 20, 20, 35, 55, 25, 5, 15, 3, 10],
    [17, 10, 33, 45, 0, 14, 50, 27, 33, 60, 17, 10, 20, 13, 71],
    [15, 70, 90, 20, 11, 0, 35, 30, 15, 18, 15, 35, 90, 23, 25],
    [25, 19, 18, 15, 20, 15, 0, 20, 10, 14, 10, 20, 15, 10, 18],
    [8, 20, 15, 60, 40, 33, 25, 0, 27, 60, 80, 35, 30, 41, 35],
    [21, 34, 17, 10, 11, 40, 8, 32, 0, 47, 76, 40, 21, 9, 31],
    [45, 5, 10, 60, 8, 20, 8, 20, 25, 0, 55, 30, 45, 25, 40],
    [38, 20, 23, 30, 5, 55, 50, 33, 70, 14, 0, 60, 35, 30, 21],
    [12, 15, 45, 21, 10, 100, 8, 20, 35, 43, 8, 0, 15, 100, 23],
    [80, 10, 90, 33, 70, 35, 45, 30, 40, 80, 45, 30, 0, 50, 20],
    [33, 90, 40, 18, 15, 50, 25, 90, 44, 43, 70, 5, 50, 0, 25],
    [25, 70, 45, 50, 5, 45, 20, 100, 25, 50, 35, 10, 90, 5, 0],
]

checar se está invertido ou não. qual logica usar?
"""

utils.square_root()

if __name__ == "__main__":
    # Testar algoritmos
    genetic_algorithm(cost_matrix)
    ant_colony_algorithm(cost_matrix)
